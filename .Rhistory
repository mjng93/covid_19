rollapply(us$confirmed,width=7,FUN=mean,fill=NA)
rollapply(us$confirmed,width=7,FUN=mean,fill=NA,align='right')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(covid.agg)
head(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
head(covid)
length(unique(covid$Province.State))
covid <- read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19_data.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=FALSE) # add date of 100th case
length(unique(covid$Province.State))
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
length(unique(covid$Province.State))
head(covid)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
install.packages('rsconnect')
install.packages("rsconnect")
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
head(covid)
length(unqiue(covid$Province.State))
length(unique(covid$Province.State))
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
tinytex::install_tinytex()
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
(Sys.Date()-max(covid.kaggle$ObservationDate,na.rm = T))
max(covid.kaggle$Date)
tail(  new_state_data[new_state_data$ObservationDate %in% covid.kaggle$Date,])
new_state_data[new_state_data$ObservationDate %in% covid.kaggle$Date,]=NULL
tail( new_state_data[new_state_data$ObservationDate %in% covid.kaggle$Date,])
new_state_data[new_state_data$ObservationDate %in% covid.kaggle$Date,]=NULL
new_state_data[-c(new_state_data$ObservationDate %in% covid.kaggle$Date),]
tail(new_state_data[-c(new_state_data$ObservationDate %in% covid.kaggle$Date),])
unique(new_state_data[-c(new_state_data$ObservationDate %in% covid.kaggle$Date),"Date"])
unique(new_state_data[c(new_state_data$ObservationDate %in% covid.kaggle$Date),"Date"])
unique(new_state_data[c(new_state_data$ObservationDate %in% covid.kaggle$Date),"ObservationDate"])
new_state_data[new_state_data$ObservationDate %in% covid.kaggle$Date,]=NA
tail(new_state_Data)
tail(new_state_aata)
tail(new_state_data)
/q
\q
tail(new_state_data)
head(new_state_data)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
print(group_by(bbb,gender) %>% summarise(n=n(),percent=n()/nrow(bbb)))
ggplot(group_by(bbb,gender) %>% summarise(percent=n()/nrow(bbb)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
#summarise(bbb,mean())
colnames(bbb)
summarise(bbb,mean(total),mean(purch),mean(last))
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
arrange(group_by(bbb,state) %>% summarise(n()))
arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),`Number of Customers`)
arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`)
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),count),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
mean(subset(bbbb,state=="NY")[,"total"])
mean(subset(bbb,state=="NY")[,"total"])
mean(subset(bbb,state=="NY")[,"total"],na.rm=T)
tail(subset(bbb,state=="NY"))
mean(subset(bbb,state=="NY")$total)
tail(subset(bbb,state=="NJ"))
mean(subset(bbb,state=="NJ")$total)
cor(bbb$book,bbb$nonbook)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,50), aes(x=book, y=nonbook)) +
geom_point()
slice(bbb,50)
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
group_by(bbb,gender,buyer) %>% summarise(n())
tabyl(bbb,gender,buyer)
bbb %>%
tabyl(gender) %>%
adorn_totals()
bbb %>%
tabyl(gender,buyer) %>%
adorn_totals()
bbb %>%
tabyl(gender,buyer) %>%
adorn_percentages()
bbb %>%
tabyl(gender,buyer) %>%
adorn_totals() %>%
adorn_percentages() %>%
adorn_pct_formatting()
bbb %>%
tabyl(gender,buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
bbb %>%
tabyl(gender,buyer)
print(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n()/sum(n)))
print(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
print(group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
print(group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
bbb %>%
tabyl(gender,buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
print(group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
print(group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)) %>% spread(key=gender,value=c(n,percent)))
print(group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
group_by(bbb,gender) %>% summarise(sum(purch),mean(purch))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
tail(bbb)
nrow(bbb)
length(unique(bbb$acctnum))
summaise(bbb,min_first_last=min(first-last),max_first_last=max(first-last),mean_first_last=mean(first-last))
summarise(bbb,min_first_last=min(first-last),max_first_last=max(first-last),mean_first_last=mean(first-last))
bbb %>% mutate(first_last=first-last)
tail(bbb)
View(bbb)
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
tabyl(subset(bbb,purch>=2),buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
(subset(bbb,purch>=2) %>%
tabylbuyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
(subset(bbb,purch>=2) %>%
tabyl(buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
\q
subset(bbb,purch>=2) %>%
tabyl(buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
bbb %>%
tabyl(buyer) %>%
adorn_percentages() %>%
adorn_pct_formatting()
print(group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
print(group_by(subset(bbb,purch>=2),buyer) %>% summarise(percent=n()/sum(n)) )
print(group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
bbb %>%
tabyl(buyer)
bbb %>%
tabyl(buyer) %>%
adorn_percentages() %>%
bbb %>%
tabyl(buyer) %>%
adorn_percentages()
bbb %>%
tabyl(buyer) %>%
adorn_percentages()
bbb %>%
tabyl(buyer) %>%
adorn_percentages()
print(group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
summarise(bbb,sum(child),sum(youth),sum(cook),sum(do_it),sum(reference),sum(art),sum(geog))
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals
t(totals)
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
print(group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print(totals)
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print(totals)
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print(totals)
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print(totals)
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
library(gmodels)
library(modelr)
library(janitor)
library(haven)
library(readxl)
library(knitr)
library(psych)
library(statar)
library(tidyverse)
# use load("filename.Rdata") for .Rdata files
load("bbb.Rdata")
tabyl(bbb,gender)
group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
ggplot(group_by(bbb,gender) %>% summarise(n=n()) %>% mutate(percent=n/sum(n)),aes(x=gender,y=percent)) +
geom_bar(stat="identity")
summarise(bbb,`Average Total $ Spent`=mean(total),`Average Total Book Purchases`=mean(purch),`Average Number of Months Since Last Purchase`=mean(last))
head(arrange(group_by(bbb,state) %>% summarise(`Number of Customers`=n()),-`Number of Customers`),3)
head(arrange(group_by(bbb,state) %>% summarise(count=n(),`Average Total Spending`=mean(total)),-count),3)
bbb %>%
select(book,nonbook) %>%
corr.test()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook)) +
geom_point()
ggplot(slice(bbb,1:50), aes(x=book, y=nonbook,color=gender)) +
geom_point()
totals=summarise(bbb,total=sum(purch),child=sum(child),youth=sum(youth),cook=sum(cook),do_it=sum(do_it),reference=sum(reference),art=sum(art),geog=sum(geog))
totals=t(totals)
colnames(totals)="Total Books Purchased"
print(totals)
print("Cook Books sold the most and Reference books sold the least")
group_by(bbb,gender,buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
group_by(bbb,gender) %>% summarise(`Total Number of Purchases`=sum(purch),`Average Number of Purchases`=mean(purch))
summarise(bbb %>% mutate(first_last=first-last),min=min(first_last),max=max(first_last),mean=mean(first_last))
group_by(subset(bbb,purch>=2),buyer) %>% summarise(n=n()) %>% mutate(percent=n/sum(n))
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
runApp('covid_app.R')
source('C:/Users/micha/Dropbox/Files/School/Grad/Kellogg/academics/Spring_2020/MECN-446/class2.R')
head(tires)
head(shmargetData)
?glm
glm(purchase~price,data=shmargetData,type='binomial')
glm(purchase~price,data=shmargetData,family='binomial')
confint(glm(purchase~price,data=shmargetData,family='binomial'))
?confint
confint(glm(purchase~price,data=shmargetData,family='binomial'),parm=0.05)
confint(glm(purchase~price,data=shmargetData,family='binomial'),parm=0.95)
confint(glm(purchase~price,data=shmargetData,family='binomial'),level=0.95)
exp(confint(glm(purchase~price,data=shmargetData,family='binomial'),level=0.95))
exp(confint(glm(purchase~price,data=shmargetData,family=binomial),level=0.95))
confint(glm(purchase~price,data=shmargetData,family=binomial),level=0.95)
summary(glm(purchase~price,data=shmargetData,family=binomial),level=0.95)
logit.mod=glm(purchase~price,data=shmargetData,family=binomial)
exp(confint(logit.mod))
exp(confint.default(logit.mod))
confint.default(logit.mod)
confint(logit.mod)
