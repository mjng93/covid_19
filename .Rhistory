rollapply(us$confirmed,width=7,fill=NA)
rollapply(us$confirmed,width=7,fun=mean(),fill=NA)
rollapply(us$confirmed,width=7,fun=mean,fill=NA)
rollapply(us$confirmed,width=7,FUN=mean,fill=NA)
rollapply(us$confirmed,width=7,FUN=mean,fill=NA,align='right')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(covid.agg)
head(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
head(covid)
length(unique(covid$Province.State))
covid <- read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19_data.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=FALSE) # add date of 100th case
length(unique(covid$Province.State))
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
length(unique(covid$Province.State))
head(covid)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
install.packages('rsconnect')
install.packages("rsconnect")
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
head(covid)
length(unqiue(covid$Province.State))
length(unique(covid$Province.State))
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
write.csv(sort(unique(covid$Province.State)),"province.state.names.csv")
write.csv(sort(unique(covid$Province.State)),"C:/Users/micha/Dropbox/Files/Projects/covid_19/province.state.names.csv")
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
state.pop=read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/state_pop_match.csv",stringsAsFactors = FALSE)
head(state.pop)
state.pop=read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/state_pop_match.csv",stringsAsFactors = FALSE)
head(state.pop)
state.pop=read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/state_pop_match.csv",stringsAsFactors = FALSE)
head(state.pop)
nrow(covid)
covid=merge(covid,state.pop,by="Province.State",all=TRUE)
nrow(covid)
tail(covid)
covid=merge(covid,state.pop,by="Province.State",all.x=TRUE)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
getwd()
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
nrow(covid)
tail(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid=merge(covid,state.pop,by="Province.State",all.x=TRUE)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
tail(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid=merge(covid,state.pop,by="Province.State",all.x=TRUE)
head(covid)
covid=merge(covid.state,state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
head(tests)
head(covid.state)
tabPanel("Country Data",
#customHeader(title = "Data 'Sandbox' Manipulator"),
column(12,
sidebarLayout(
sidebarPanel(h3("COVID-19 Data"),
selectInput(ns('ystat'),
label = 'Select statistic',
choices=c("Confirmed Cases","Deaths","Recovered Cases"),
selected="deaths"
),
radioButtons(ns("radio"),
label = "Select Data Transformation",
choices = c("Levels" = "levels","Per Capita Levels" = "pc", "Log Levels" = "log", "Change (Daily)" = "diff", "Percent Change (Daily)" = "qoq","Average Daily Percent Change (Rolling, 7-days)"="chg.avg"), #"Percent Change (10-day)" = "mom"
selected = "log"),
selectInput(ns('xchoice'),
label = 'Select time horizon',
choices=c("Date","Since 1st Case","Since 100th Case","Since 10th Death"),
selected="Since 10th Death"
),
selectInput(ns("name"),
label = "Select country:",
choices = c(unique(covid.agg$Country.Region)),
selected = c("US","Italy","Mainland China","South Korea"),
multiple = TRUE
),
downloadButton(ns("CovidData"), label = "Download Data")
),
#Main panel for displaying outputs ----
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot", plotlyOutput(ns("plot"))),
tabPanel("Summary", tableOutput(ns("summary"))),
tabPanel("Correlations", tableOutput(ns("corr"))),
tabPanel("Table", tableOutput(ns("table")))),
p("Data is sourced from Johns Hopkins Univerity CSSE as posted on",
span(a("Github",href="https://github.com/CSSEGISandData/COVID-19")),
"and provided online through",
span(a("Kaggle",href="https://www.kaggle.com/sudalairajkumar/novel-corona-virus-2019-dataset")),
". All data is aggregated by Country/Region. Also inspired by the Financial Times ",
span(a("dataviz",href="https://www.ft.com/coronavirus-latest")),
" on Covid-19.",
"Population data is sourced from the ",
span(a("World Bank",href="https://data.worldbank.org/indicator/sp.pop.totl")),
". Data is currently updated through",
span(as.character(format(as.Date(max(covid.agg$Date,na.rm=T)),"%B %d, %Y"))),".")
)
) #,div(style = "width:5000px;height:10px")#style='padding:100px;'
)
)
tests$date=as.Date(tests$date,format="%Y%m%d")
head(covid.state)
head(tests)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
head(tests)
class(tests$date)
as.Date(as.character(tests$date),format="%Y%m%d")
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
head(tests)
head(covid.state)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
covid.state=covid
colors=rainbow(15, alpha = 1, rev = FALSE)
covid=as.data.frame(group_by(covid,ObservationDate,Province.State,Country.Region,Last.Update,state,state_ab) %>% summarise(Confirmed = sum(Confirmed),Deaths=sum(Deaths),Recovered=sum(Recovered),population=max(population),state_population=max(state_population,na.rm=T)))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=TRUE) # add date of 100th case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Deaths>=10) %>% summarise(start.d.10=min(ObservationDate))),by="Province.State",all=TRUE) #add date of 10th death
covid$since_start=covid$ObservationDate-covid$start
covid$since_case_100=covid$ObservationDate-covid$start.c.100
covid$since_death_10=covid$ObservationDate-covid$start.d.10
covid$ObservationDate=as.Date(covid$ObservationDate)
#top countries are those with over 50 cases
covid.top=subset(covid,Confirmed>50)
top.countries=unique(covid.top$Province.State)
covid=arrange(covid,ObservationDate)
#aggregate across states/cities for each country
us.all=subset(covid,Country.Region=="US")
us=as.data.frame(group_by(us.all,ObservationDate, Country.Region) %>% summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),Recovered=sum(Recovered)))
us$ObservationDate=as.Date(us$ObservationDate)
covid.agg=as.data.frame(group_by(covid,ObservationDate, Country.Region) %>% summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),Recovered=sum(Recovered),Population=max(population)))
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% summarise(start=min(ObservationDate))),by=c("Country.Region"),all=TRUE) #add date of first case
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% filter(confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Country.Region",all=TRUE) # add date of 100th case
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% filter(deaths>=10) %>% summarise(start.d.10=min(ObservationDate))),by="Country.Region",all=TRUE) #add date of 10th death
#covid.agg=as.data.frame(group_by(covid.agg, Country.Region) %>% mutate(confirmed.pc=confirmed/population),deaths.pc=deaths/population))
covid.agg$since_start=covid.agg$ObservationDate-covid.agg$start
covid.agg$since_case_100=covid.agg$ObservationDate-covid.agg$start.c.100
covid.agg$since_death_10=covid.agg$ObservationDate-covid.agg$start.d.10
covid.agg$ObservationDate=as.Date(covid.agg$ObservationDate)
#top countries are those with over 500 cases
covid.agg.top=subset(covid.agg,confirmed>50)
top.countries=unique(covid.agg.top$Country.Region)
covid.agg=arrange(covid.agg,ObservationDate)
#log
measures=c("confirmed","deaths","Recovered")
for (i in 1:3){
covid.agg[,paste0(measures[i],".log")]=log(covid.agg[,measures[i]])
}
#plots
plot(x=covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_case_100>(-1 ),"since_case_100"],y=log(covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_case_100>(-1 ),"confirmed"]),type='l',xlab="Days since 100th case",ylab="log count",main="Confirmed COVID-19 Cases",ylim=c(min(covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"confirmed.log"]),12),xlim=c(-1,56))
for (i in (2:length(top.countries))){
lines(x=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"since_case_100"] ,y=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"confirmed.log"],col=colors[i])
}
#deaths
plot(x=covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_death_10>(-1 ),"since_death_10"],y=log(covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_death_10>(-1 ),"deaths"]),type='l',xlab="Days since 10th death",ylab="log count",main="COVID-19 Deaths",ylim=c(2,8),xlim=c(-1,35))
for (i in (2:length(top.countries))){
lines(x=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_death_10>(-1 ),"since_death_10"] ,y=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_death_10>(-1 ),"deaths.log"],col=colors[i])
}
covid.agg.confirmed=dcast(covid.agg,since_case_100~Country.Region,value.var="confirmed")
covid.agg.confirmed.log=dcast(covid.agg,since_case_100~Country.Region,value.var="confirmed.log")
colnames(covid.agg)=c("Country.Region","Date","Confirmed Cases","Deaths","Recovered Cases","Population","start"      ,"start.c.100","start.d.10","Since 1st Case","Since 100th Case","Since 10th Death","confirmed.log","deaths.log","Recovered.log")
covid=as.data.frame(group_by(covid, Province.State) %>% mutate(case.max=max(Confirmed,na.rm=T))) # find max number of cases per country
colnames(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
covid=merge(covid,state.pop,by="Province.State",all.x=TRUE)
covid.state=covid
colors=rainbow(15, alpha = 1, rev = FALSE)
covid=as.data.frame(group_by(covid,ObservationDate,Province.State,Country.Region,Last.Update,state,state_ab) %>% summarise(Confirmed = sum(Confirmed),Deaths=sum(Deaths),Recovered=sum(Recovered),population=max(population),state_population=max(state_population,na.rm=T)))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=TRUE) # add date of 100th case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Deaths>=10) %>% summarise(start.d.10=min(ObservationDate))),by="Province.State",all=TRUE) #add date of 10th death
covid$since_start=covid$ObservationDate-covid$start
covid$since_case_100=covid$ObservationDate-covid$start.c.100
covid$since_death_10=covid$ObservationDate-covid$start.d.10
covid$ObservationDate=as.Date(covid$ObservationDate)
#top countries are those with over 50 cases
covid.top=subset(covid,Confirmed>50)
top.countries=unique(covid.top$Province.State)
covid=arrange(covid,ObservationDate)
nrow(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
nrow(covid)
covid=merge(covid,state.pop,by="Province.State",all.x=TRUE)
nrow(covid)
head(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
covid=merge(covid,state.pop,by="Province.State",all=FALSE)
nrow(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
nrow(covid)
head(state.pop)
covid=merge(covid,state.pop,by="Province.State",all=FALSE)
nrow(covid)
tail(covid)
head(covid)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(reshape2)
library(zoo)
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
#covid data comes from Johns Hopkins University; sourced from Kaggle
covid <- read.csv("covid_19_data.csv",stringsAsFactors = FALSE)
pop.match <- read.csv("world_bank_pop_match.csv",stringsAsFactors = FALSE)
pop <- read.csv("wb_population.csv",stringsAsFactors = FALSE)
pop=merge(pop,pop.match,by="WB.Country.Region",all=FALSE)
covid=merge(covid,pop,by="Country.Region",all=FALSE)
state.pop=read.csv("state_pop_match.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
covid.state=covid
colors=rainbow(15, alpha = 1, rev = FALSE)
covid=as.data.frame(group_by(covid,ObservationDate,Province.State,Country.Region,Last.Update) %>% summarise(Confirmed = sum(Confirmed),Deaths=sum(Deaths),Recovered=sum(Recovered),population=max(population)))#,state_population=max(state_population,na.rm=T)
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=TRUE) # add date of 100th case
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Deaths>=10) %>% summarise(start.d.10=min(ObservationDate))),by="Province.State",all=TRUE) #add date of 10th death
covid$since_start=covid$ObservationDate-covid$start
covid$since_case_100=covid$ObservationDate-covid$start.c.100
covid$since_death_10=covid$ObservationDate-covid$start.d.10
covid$ObservationDate=as.Date(covid$ObservationDate)
#top countries are those with over 50 cases
covid.top=subset(covid,Confirmed>50)
top.countries=unique(covid.top$Province.State)
covid=arrange(covid,ObservationDate)
#aggregate across states/cities for each country
us.all=subset(covid,Country.Region=="US")
us=as.data.frame(group_by(us.all,ObservationDate, Country.Region) %>% summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),Recovered=sum(Recovered)))
us$ObservationDate=as.Date(us$ObservationDate)
covid.agg=as.data.frame(group_by(covid,ObservationDate, Country.Region) %>% summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),Recovered=sum(Recovered),Population=max(population)))
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% summarise(start=min(ObservationDate))),by=c("Country.Region"),all=TRUE) #add date of first case
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% filter(confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Country.Region",all=TRUE) # add date of 100th case
covid.agg=merge(covid.agg,as.data.frame(group_by(covid.agg, Country.Region) %>% filter(deaths>=10) %>% summarise(start.d.10=min(ObservationDate))),by="Country.Region",all=TRUE) #add date of 10th death
#covid.agg=as.data.frame(group_by(covid.agg, Country.Region) %>% mutate(confirmed.pc=confirmed/population),deaths.pc=deaths/population))
covid.agg$since_start=covid.agg$ObservationDate-covid.agg$start
covid.agg$since_case_100=covid.agg$ObservationDate-covid.agg$start.c.100
covid.agg$since_death_10=covid.agg$ObservationDate-covid.agg$start.d.10
covid.agg$ObservationDate=as.Date(covid.agg$ObservationDate)
#top countries are those with over 500 cases
covid.agg.top=subset(covid.agg,confirmed>50)
top.countries=unique(covid.agg.top$Country.Region)
covid.agg=arrange(covid.agg,ObservationDate)
#log
measures=c("confirmed","deaths","Recovered")
for (i in 1:3){
covid.agg[,paste0(measures[i],".log")]=log(covid.agg[,measures[i]])
}
#plots
plot(x=covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_case_100>(-1 ),"since_case_100"],y=log(covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_case_100>(-1 ),"confirmed"]),type='l',xlab="Days since 100th case",ylab="log count",main="Confirmed COVID-19 Cases",ylim=c(min(covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"confirmed.log"]),12),xlim=c(-1,56))
for (i in (2:length(top.countries))){
lines(x=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"since_case_100"] ,y=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_case_100>(-1 ),"confirmed.log"],col=colors[i])
}
#deaths
plot(x=covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_death_10>(-1 ),"since_death_10"],y=log(covid.agg[covid.agg$Country.Region==top.countries[1] & covid.agg$since_death_10>(-1 ),"deaths"]),type='l',xlab="Days since 10th death",ylab="log count",main="COVID-19 Deaths",ylim=c(2,8),xlim=c(-1,35))
for (i in (2:length(top.countries))){
lines(x=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_death_10>(-1 ),"since_death_10"] ,y=covid.agg[covid.agg$Country.Region==top.countries[i] & covid.agg$since_death_10>(-1 ),"deaths.log"],col=colors[i])
}
covid.agg.confirmed=dcast(covid.agg,since_case_100~Country.Region,value.var="confirmed")
covid.agg.confirmed.log=dcast(covid.agg,since_case_100~Country.Region,value.var="confirmed.log")
colnames(covid.agg)=c("Country.Region","Date","Confirmed Cases","Deaths","Recovered Cases","Population","start"      ,"start.c.100","start.d.10","Since 1st Case","Since 100th Case","Since 10th Death","confirmed.log","deaths.log","Recovered.log")
covid=as.data.frame(group_by(covid, Province.State) %>% mutate(case.max=max(Confirmed,na.rm=T))) # find max number of cases per country
colnames(covid)=c("Province.State","Date","Country.Region","Last.Update","Confirmed Cases","Deaths","Recovered Cases","Population","start","start.c.100","start.d.10","Since 1st Case","Since 100th Case","Since 10th Death","Case_Max")
covid=subset(covid,Case_Max>=50) #limit states to those with at least 50 cases (~20th percentile)
covid$Case_Max=NULL
nrow(covid)
nrow(merge(covid,state.pop,by="Province.State",all.x=TRUE))
nrow(merge(covid,state.pop,by="Province.State",all.y=TRUE))
nrow(merge(covid,state.pop,by="Province.State",all=TRUE))
nrow(merge(covid,state.pop,by="Province.State",all=FALSE))
nrow(merge(covid[covid$Country.Region=="US"],state.pop,by="Province.State",all=FALSE))
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all=FALSE))
nrow(covid[covid$Country.Region=="US",])
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all,x=TRUE))
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all,x=TRUE))
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all,x=FALSE))
head(covid)
nrow(covid)
head(state.pop)
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all,x=FALSE))
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=FALSE))
nrow(merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.y=FALSE))
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
tail(covid.state)
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
head(covid)
nrow(covid)
head(covid)
tail(covid.state)
head(tests)
colnames(tests)[c(1,2)]=c("Date","State")
covid.state=merge(covid.state,test,by=c("Date","State"))
covid.state=merge(covid.state,tests,by=c("Date","state_ab"))
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
colnames(tests)[c(1,2)]=c("Date","state_ab")
covid.state=merge(covid.state,tests,by=c("Date","state_ab"))
head(covid.state)
nrow(covid.state)
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
nrow(covid.state)
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
colnames(tests)[c(1,2)]=c("Date","state_ab")
covid.state=merge(covid.state,tests,by=c("Date","state_ab"),all.x=TRUE)
nrow(covid.state)
tail(covid.state)
colnames(tests)
9703+355
9703+352
runApp('covid_app.R')
runApp('covid_app.R')
colnames(covid.state)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
runApp('covid_app.R')
max(covid.state$Date)
max(covid.state$Date,na.rm=T)
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
colnames(tests)[c(1,2)]=c("Date","state_ab")
covid.state=merge(covid.state,tests,by=c("Date","state_ab"),all.x=TRUE)
colnames(covid)
colnames(covid.state)
colnames(covid.state)=c("Province.State","Date","Country.Region","Last.Update","Confirmed Cases","Deaths","Recovered Cases","Population","start","start.c.100","start.d.10","Since 1st Case","Since 100th Case","Since 10th Death","state","state_population","Positive Tests","Negative Tests","Pending Tests","Hospitalized Cases","Deaths2","Total Tests","dateChecked")
tail(covid.state)
covid.state=merge(covid[covid$Country.Region=="US",],state.pop,by="Province.State",all.x=TRUE)
tests <- read.csv("states-daily.csv",stringsAsFactors = FALSE)
tests$date=as.Date(as.character(tests$date),format="%Y%m%d")
colnames(tests)[c(1,2)]=c("Date","state_ab")
covid.state=merge(covid.state,tests,by=c("Date","state_ab"),all.x=TRUE)
tail(covid.state)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
runApp('covid_app.R')
c(unique(covid.state$state))
tail(covid.state)
as.character(format(as.Date(max(covid.state$Date,na.rm=T)),"%B %d, %Y"))
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
subset(covid.state,state=="California")
26400/39512223
26400/39512223*100
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
