test=melt(covid.agg[,c("Country.Region","ObservationDate","confirmed")],id.vars=c("ObservationDate","Country.Region"))
head(test)
test.diff=covid.agg
test.us=subset(covid.agg,Country.Region=="US")
head(test.us)
test.us$deaths=c(NA,diff(test.us$deaths,lag=1))
tail(test.us)
test.us=melt(test.us[,c("Country.Region","ObservationDate","deaths")],id.vars=c("ObservationDate","Country.Region"))
tail(test.us)
head(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
?ddply
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(subset(covid.agg,select=-c(confirmed)))
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
as.data.frame(group_by(covid,ObservationDate, Country.Region) %>% summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),Recovered=sum(Recovered)))
tail(as.data.frame(group_by_(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(input$ystat,lag=1))))))
)
tail(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(input$ystat,lag=1))))))
)
tail(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
)
tail(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
,20)
tail(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
,20)
head(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
,20)
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
,20)
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
)
max(help$test)
diff(covid.agg$deaths)
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
)
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","deaths")],ObservationDate,Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
)
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","deaths")],Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1)))))))
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],Country.Region) %>% summarise(test=as.numeric(as.vector(c(0,diff(deaths,lag=1)))))))
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],Country.Region) %>% mutate(test=as.numeric(as.vector(c(0,diff(deaths,lag=1)))))))
head(help)
tail(help)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
help=(as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],Country.Region) %>% mutate(test=as.numeric(as.vector(c(0,diff(deaths,lag=1)))))))
)
/q
head(help)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
test=covid.agg[,c("Country.Region","ObservationDate","deaths")]
head(test)
tail(test)
test.diff=as.data.frame(group_by(test,Country.Region) %>% mutate(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
head(test.diff)
tail(test.diff)
test.diff$deaths=test.diff$test
tail(test.diff)
test.diff=subset(test.diff,select=-c(test))
tail(test.diff)
test.diff1=melt(test.idff,id.vars=c("ObservationDate","Country.Region"))
test.diff1=melt(test.diff,id.vars=c("ObservationDate","Country.Region"))
head(test.diff1)
tail(test.diff1)
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
test.diff=as.data.frame(group_by(covid.agg[,c("Country.Region","ObservationDate","deaths")],Country.Region) %>% mutate(test=as.numeric(as.vector(c(0,diff(deaths,lag=1))))))
head(test.diff)
tail(test.diff)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
?diff
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
arrange(covid.agg,ObservationDate)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
tail(us)
us
=16/1
Delt(us$deaths,k=1)
Delt(us$deaths,k=7)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(covid.agg)
tail(gsub(Inf,NA,covid.agg$deaths.log))
head(gsub(Inf,NA,covid.agg$deaths.log))
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(gsub(Inf,NA,covid.agg$deaths.log))
head(as.numeric()gsub(Inf,NA,covid.agg$deaths.log))
head(as.numeric(gsub(Inf,NA,covid.agg$deaths.log))
)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
?rollapply
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(us)
rollapply(us$confirmed,width=7,fill=NA)
rollapply(us$confirmed,width=7,fun=mean(),fill=NA)
rollapply(us$confirmed,width=7,fun=mean,fill=NA)
rollapply(us$confirmed,width=7,FUN=mean,fill=NA)
rollapply(us$confirmed,width=7,FUN=mean,fill=NA,align='right')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
head(covid.agg)
head(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
head(covid)
length(unique(covid$Province.State))
covid <- read.csv("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19_data.csv",stringsAsFactors = FALSE)
covid$ObservationDate=as.Date(covid$ObservationDate,format="%m/%d/%Y")
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% summarise(start=min(ObservationDate))),by=c("Province.State"),all=FALSE) #add date of first case
length(unique(covid$Province.State))
covid=merge(covid,as.data.frame(group_by(covid, Province.State) %>% filter(Confirmed>=100) %>% summarise(start.c.100=min(ObservationDate))),by="Province.State",all=FALSE) # add date of 100th case
length(unique(covid$Province.State))
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid.r')
length(unique(covid$Province.State))
head(covid)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_app.R')
install.packages('rsconnect')
install.packages("rsconnect")
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
head(covid)
length(unqiue(covid$Province.State))
length(unique(covid$Province.State))
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
colnames(covid.agg)
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
colnames(covid)
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
library(shiny); runApp('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid_app.R')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
# Install packages needed for class
options(install.packages.check.source = "no")
pkgs = c('rmarkdown', 'gmodels', 'modelr', 'janitor', 'haven', 'readxl', 'knitr', 'psych', 'statar', 'tidyverse', 'devtools', 'lfe', 'Matrix')
pkgs.installed = installed.packages()[, 'Package']
needtoinstall = setdiff(pkgs, pkgs.installed)
if (length(needtoinstall) > 0)
install.packages(needtoinstall)
devtools::install_github("fzettelmeyer/mktg482", upgrade = "never", force = TRUE)
# Set some defaults for the RMarkdown document
knitr::opts_chunk$set(echo=TRUE,      # Print all the code in all the chunks
warning=FALSE,  # Don't print warning statements
message=FALSE,  # Don't print other R output messages
comment=NA)     # Helps produce prettier output
library(knitr)          # Required to create PDFs from R Markdown documents
if(length(needtoinstall) == 0){
print("No packages required installation.")
}else{
print("The following packages were installed:")
needtoinstall
}
tinytex::install_tinytex()
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
setwd("C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19")
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
source('C:/Users/micha/Dropbox/Files/Projects/covid_19/covid_19/covid.r')
library(shiny); runApp('covid_app.R')
runApp('covid_app.R')
covid.top.deaths=subset(covid,Deaths>quantile(covid$Deaths[covid$ObservationDate==max(covid$ObservationDate)],seq(0,1,.05))[21])
top.countries.deaths=unique(covid.top.deaths$Country.Region)
top.countries.deaths
covid.top.deaths=subset(covid,Deaths>quantile(covid$Deaths[covid$ObservationDate==max(covid$ObservationDate)],seq(0,1,.05))[20],na.rm=T)
top.countries.deaths=unique(covid.top.deaths$Country.Region)
top.countries.deaths
runApp('covid_app.R')
top.states
covid.state.top=subset(covid.kaggle,`Confirmed Cases`>quantile(covid.kaggle$`Confirmed Cases`[covid.kaggle$Date==max(covid.kaggle$Date)],seq(0,1,.05),na.rm=T)[19] & Country.Region=="US")
top.states=unique(covid.state.top$Province.State)
top.states
head(covid.kaggle)
tail(covid.kaggle[covid.kaggle$Province.State %in% top.states,])
tail(covid.kaggle[covid.kaggle$Country.Region %in% top.states,])
runApp('covid_app.R')
colnames(covid.county)
covid.county.top=arrange(covid.county.top,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(NA,diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(NA,diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(NA,diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(NA,diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(rep(NA,6),diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(rep(NA,6),diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(rep(NA,7),diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(rep(NA,7),diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
head(covid.county)
diff(1:10,lag=7)
1:10
diff(1:10,lag=1)
diff(1:10,lag=7)
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(count=nrow()))
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(length(Cases)))
tail(covid.county.top)
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(count=length(Cases)))
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(count=length(Cases)))
covid.county.top=subset(covid.county.top,count>7)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(rep(NA,7),diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(rep(NA,7),diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
tail(covid.county.top)
subset(covid.county.top,county="New York City")
subset(covid.county.top,county=="New York City")
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[19] & Country.Region=="US")
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[19])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
top.county.weekly.cases
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[19]
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[21]
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[2-]
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[20]
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.05),na.rm=T)[20])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
top.county.weekly.cases
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[50]
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100]
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[99]
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.001),na.rm=T)[99])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
top.county.weekly.cases
quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.001),na.rm=T)[99]
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[99])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
top.county.weekly.cases
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
top.county.weekly.cases
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
colnames(covid.county.top)
runApp('covid_app.R')
covid.county.top=arrange(arrange(covid.county.top,Date),-`1-Week Change in Cases`)
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(count=length(Cases)))
covid.county.top=subset(covid.county.top,count>7)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(rep(NA,7),diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(rep(NA,7),diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
covid.county.top=arrange(arrange(covid.county.top,Date),-`1-Week Change in Cases`)
covid.county.top[covid.county.top$county.state %in% top.county.weekly.cases & covid.county.top$Date==max(covid.county.top$Date,na.rm=T),"1-Week Change in Classes"]
covid.county.top[covid.county.top$county.state %in% top.county.weekly.cases & covid.county.top$Date==max(covid.county.top$Date,na.rm=T),]
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
round(0.004566,1)
round(0.004566,2)
round(0.004566,-1)
format(round(1.1234, 2), nsmall = 2)
round(1.1234, 2)
round(0.1234, 2)
round(0.01234, 2)
runApp('covid_app.R')
runApp('covid_app.R')
colnames(covid.agg)
runApp('covid_app.R')
runApp('covid_app.R')
max(covid.county.top$`1-Week % Change in Cases`,na.rm = T)
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
colnames(covid.agg)
runApp('covid_app.R')
log(0.03)
log(1.03)
runApp('covid_app.R')
tail(log(1+(covid.agg$`Confirmed Cases`/covid.agg$Population)))
tail(covid.agg)
log(1)
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
covid.county.top=arrange(arrange(covid.county.top,Date),-`1-Week % Change in Cases`)
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
covid.county.top=arrange(covid.county,Date)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(count=length(Cases)))
covid.county.top=subset(covid.county.top,count>7)
covid.county.top=as.data.frame(group_by(covid.county.top,county.state) %>% mutate(`Change in Cases`=c(NA,diff(Cases,lag=1)) ,
`% Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=1)))*100,2),
`1-Week Change in Cases`=c(rep(NA,7),diff(Cases,lag=7)) ,
`1-Week % Change in Cases`=round(as.numeric(as.vector(Delt(Cases,k=7)))*100,2),
`Change in Deaths`=c(NA,diff(`Deaths`,lag=1)) ,
`% Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=1)))*100,2),
`1-Week Change in Deaths`=c(rep(NA,7),diff(`Deaths`,lag=7)) ,
`1-Week % Change in Deaths`=round(as.numeric(as.vector(Delt(`Deaths`,k=7)))*100,2)
))
covid.county.new.cases=subset(covid.county.top,`1-Week Change in Cases`>=quantile(covid.county.top$`1-Week Change in Cases`[covid.county.top$Date==max(covid.county.top$Date,na.rm=T)],seq(0,1,.01),na.rm=T)[100])
top.county.weekly.cases=unique(covid.county.new.cases$county.state)
covid.county.top=arrange(arrange(covid.county.top,Date),-`1-Week % Change in Cases`)
plot.data=arrange(covid.county.top[covid.county.top$county.state %in% top.county.weekly.cases & covid.county.top$Date==max(covid.county.top$Date,na.rm=T),],`1-Week Change in Cases`)
plot.data
plot.data=arrange(covid.county.top[covid.county.top$county.state %in% top.county.weekly.cases & covid.county.top$Date==max(covid.county.top$Date,na.rm=T),],`1-Week Change in Cases`)
plot.data
plot.data=arrange(covid.county.top[covid.county.top$county.state %in% top.county.weekly.cases & covid.county.top$Date==max(covid.county.top$Date,na.rm=T),],-`1-Week Change in Cases`)
plot.data
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
tail(covid.state)
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
log(2)
ln(2)
log(2)
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
?br
head(covid.agg.total)
tail(as.numeric(as.vector(Delt(covid.agg.total[,"Deaths"],k=1))),3)
runApp('covid_app.R')
runApp('covid_app.R')
tail(as.numeric(as.vector(Delt(subset(covid.agg,Country.Region=="US")[,"Deaths"],k=1))),3)
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
runApp('covid_app.R')
